/**
 * The buildscript block lets us tell Gradle about our dependency on ml-gradle and where to find its dependencies.
 */
buildscript {
  repositories {
    mavenCentral()
    maven {url "https://developer.marklogic.com/maven2/"}
    maven {url "http://rjrudin.github.io/marklogic-java/releases"}
  }
  
  dependencies {
    classpath "com.marklogic:ml-gradle:0.7"
  }
}

/*
 * This is a typical set of plugins for a Java project - support for Eclipse project files, the default Java 
 * support provided by Gradle, and the ml-gradle plugin.
 */
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'ml-gradle'


/*
 * This lists the repositories for finding project dependencies (which differ from buildscript dependencies - buildscript
 * dependencies are not included in project artifacts that are built).
 */
repositories {
  mavenCentral()
  maven {url "https://developer.marklogic.com/maven2/"}
  maven {url "http://rjrudin.github.io/marklogic-java/releases"}
}


/*
 * This expresses dependencies on the ml-java and ml-junit libraries. The former is typically used for application 
 * code, and the latter supports writing JUnit-based tests. 
 */
dependencies {
  compile "com.marklogic:ml-java:0.7"
  testCompile "com.marklogic:ml-junit:0.7"
}


/*
 * This is an example of how the database and server packages are created by merging one or more package files into a
 * default database/server package file. Multiple packages could exist in a scenario where a project depends on another
 * project that needs to contribute its own set of, e.g., range indexes or other configuration settings.
 *
 * This is also a basic example of how tasks registered by the ml-gradle plugin can be customized. We could add 
 * additional behavior to each via the doFirst and doLast blocks that exist for each task. 
 */
mlMergeDatabasePackages.mergePackageFilePaths = ["src/main/xqy/packages/content-database1.xml", "src/main/xqy/packages/content-database2.xml"]
mlMergeHttpServerPackages.mergePackageFilePaths = ["src/main/xqy/packages/http-server.xml"]
